name: Build and Release Windows Executable

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        os: ['windows-latest', 'ubuntu-latest']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install --no-cache-dir -r requirements.txt
        pip install --no-cache-dir pyinstaller PySimpleGUI

    - name: Build executable
      run: |
        if [[ $RUNNER_OS == 'Windows' ]]; then
          python -m PyInstaller -n "Dive Color Corrector" -F -w -i .\logo\logo.ico dcc.py
          echo "dist/Dive_Color_Corrector.exe" >> artifacts.txt
        elif [[ $RUNNER_OS == 'Linux' ]]; then
          python -m PyInstaller -n "Dive Color Corrector" -F dcc.py
          echo "dist/Dive_Color_Corrector" >> artifacts.txt
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: Dive_Color_Corrector
        path: dist/Dive_Color_Corrector.exe

  # release:
  #   runs-on: ubuntu-latest
  #   needs: build


  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Create Release
  #     id: create_release
  #     uses: actions/create-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       tag_name: ${{ github.ref }}
  #       release_name: Release ${{ github.ref }}
  #       draft: false
  #       prerelease: false

  #   - name: Upload Release Asset
  #     uses: actions/upload-release-asset@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       upload_url: ${{ steps.create_release.outputs.upload_url }}
  #       asset_path: dist/Dive_Color_Corrector.exe
  #       asset_name: Dive_Color_Corrector.exe
  #       asset_content_type: application/octet-stream

