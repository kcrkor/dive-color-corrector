name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:  # Manual trigger

jobs:
  build:
    name: Build Package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11"]
        include:
          - os: windows-latest
            executable_name: "Dive Color Corrector.exe"
          - os: ubuntu-latest
            executable_name: "Dive Color Corrector"
          - os: macos-latest
            executable_name: "Dive Color Corrector"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install dependencies
        run: |
          uv pip install -e ".[gui]"
          uv pip install pyinstaller pillow

      - name: Generate spec file
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            uv run pyinstaller --name "Dive Color Corrector" --windowed --icon "logo/logo.png" --add-data "src/dive_color_corrector/gui/assets;dive_color_corrector/gui/assets" --clean --noconfirm src/dive_color_corrector/__main__.py
          else
            uv run pyinstaller --name "Dive Color Corrector" --windowed --icon "logo/logo.png" --add-data "src/dive_color_corrector/gui/assets:dive_color_corrector/gui/assets" --clean --noconfirm src/dive_color_corrector/__main__.py
          fi

      - name: Build executable
        run: uv run pyinstaller --clean --noconfirm "Dive Color Corrector.spec"

      - name: List files in dist folder
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            dir /s /b dist
          else
            ls -R ./dist/
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dive-color-corrector-${{ matrix.os }}
          path: dist/${{ matrix.executable_name }}
          retention-days: 5

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'workflow_dispatch'
        with:
          files: artifacts/**/*
          draft: true
          prerelease: true
          generate_release_notes: true
          tag_name: draft-${{ github.sha }}